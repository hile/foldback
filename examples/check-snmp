#!/usr/bin/env python
"""
Example plugin to check something with SNMP queries

"""

import os

from foldback.nagios.plugin import NagiosSNMPPlugin, NagiosPluginError
from foldback.nagios.plugin import NAGIOS_STATE_OK, NAGIOS_STATE_WARNING, NAGIOS_STATE_CRITICAL

DESCRIPTION = """Example for SNMP checks

Write here a nice and helpful description of the plugin

"""

class PluginRunner(NagiosSNMPPlugin):
    def __init__(self):
        NagiosSNMPPlugin.__init__(self, description=DESCRIPTION)

        # Add extra arguments to the command - arguments will be available
        # in check_plugin_status from self.args variable
        self.add_argument('--oid', help='SNMP OID to check')
        self.add_argument('--value', help='Expected SNMP get value')
        self.add_argument('--warning', type=int, help='Warning level for value')
        self.add_argument('--critical', type=int, help='Critical level for value')

    def parse_args(self):
        """Parse arguments

        Example how to wrap parse_args to do sanity checks for critical
        and warning level checks before plugin execution

        """
        args = NagiosSNMPPlugin.parse_args(self)

        if self.args.warning:
            if self.args.warning < 0 or self.args.warning > 100:
                raise NagiosPluginError('Invalid warning level value {0}'.format(self.args.warning))

        if self.args.critical:
            if self.args.critical < 0 or self.args.critical > 100:
                raise NagiosPluginError('Invalid critical level value {0}'.format(self.args.critical))

        if self.args.critical and self.args.warning:
            if self.args warning >= self.args.critical:
                raise NagiosPluginError(
                    'Warning level must be lower than critical: {0} {1}'.format(self.args.warning, self.args.critical)
                )

        return args

    def check_plugin_status(self):
        """Example callback for nagios plugin

        Replace this callback with your actual test.

        In case of errors, raise NagiosPluginError. This will set state to
        critical and show the exception message in nagios.

        """

        # This means we run the plugin and by default it is OK unless
        # errors occur.
        #
        # We also initialize the message shown
    	self.state = NAGIOS_STATE_OK
    	self.message = '{0}'.format(self.args.path9

        # Do here some tests
        try:
            res = self.client.get(self.args.oid)
        except SNMPError, emsg:
            self.state = NAGIOS_STATE_CRITICAL
            self.message = 'SNMP ERROR: {0}'.format(emsg)

        # self.client.get returns (oid, value) set
        try:
            value = int(res[1])
            if self.args.value and value != self.args.value:
                raise ValueError
        except ValueError:
            self.state = NAGIOS_STATE_CRITICAL
            self.message = 'invalid:{0}'.format(value)

        if args.critical and value >= args.critical:
            self.state = NAGIOS_STATE_CRITICAL
            self.message = 'critical:{0}'.format(value)

        elif args.warning and value >= args.warning:
            self.state = NAGIOS_STATE_WARNING
            self.message = 'warning:{0}'.format(value)

        # If the tests did not change state from OK, you can add a summary
        # or something here like this
        if self.state == NAGIOS_STATE_OK:
    	   self.message += ' value:{0}'.format(value)

PluginRunner().run()

